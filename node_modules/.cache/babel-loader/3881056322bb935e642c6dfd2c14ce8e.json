{"ast":null,"code":"import _classCallCheck from \"C:\\\\wamp64\\\\www\\\\yobetit\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\wamp64\\\\www\\\\yobetit\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\wamp64\\\\www\\\\yobetit\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\wamp64\\\\www\\\\yobetit\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\wamp64\\\\www\\\\yobetit\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\wamp64\\\\www\\\\yobetit\\\\src\\\\components\\\\countrieslist\\\\countrieslist.jsx\";\nimport React, { Component } from 'react';\nimport './countrieslist.css';\nimport axios from 'axios';\nimport { NavLink } from 'react-router-dom';\nvar palabras = [\"mal\", \"bul\", \"rom\"];\n\nvar CountriesList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CountriesList, _Component);\n\n  function CountriesList() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CountriesList);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CountriesList)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      count: 0,\n      countries: [],\n      length: 0\n    };\n\n    _this.filterCountries = function () {\n      var keyw = _this.filterText.value.toLowerCase();\n\n      var filterCountryList = _this.state.countries.filter(function (country) {\n        var cArr = country.name.toLowerCase();\n        return cArr.indexOf(keyw) !== -1;\n      });\n\n      _this.setState({\n        count: 0,\n        visCountries: filterCountryList,\n        length: filterCountryList.length\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(CountriesList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var path_name = 'https://restcountries.eu/rest/v2/name/malta';\n      axios.get(path_name).then(function (response) {\n        _this2.setState({\n          countryDetail: response.data,\n          length: response.data.length\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"section\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, palabras.map(function (palabra) {\n        palabra;\n      }), React.createElement(\"h2\", {\n        className: \"text-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"From an array of string, write a function that returns a list of countries where their name matches at least a part of one of these string.\"), React.createElement(\"div\", {\n        className: \"countryDetail\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: this.state.countryDetail.map(function (country) {\n          return country.flag;\n        }),\n        className: \"img-fluid\",\n        alt: \"...\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col-md-8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        className: \"mt-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"About \", this.state.countryDetail.map(function (country) {\n        return country.name;\n      })), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \"Capital: \", React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, this.state.countryDetail.map(function (country) {\n        return country.capital;\n      }))), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"Capital: \", React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, this.state.countryDetail.map(function (country) {\n        return country.capital;\n      }))), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"Region: \", React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, this.state.countryDetail.map(function (country) {\n        return country.region;\n      }))), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"Sub-region: \", React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, this.state.countryDetail.map(function (country) {\n        return country.subregion;\n      }))), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"Calling Code: \", React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, this.state.countryDetail.map(function (country) {\n        return country.callingCodes;\n      }))), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"Other Name: \", React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, this.state.countryDetail.map(function (country) {\n        return country.altSpellings.map(function (res) {\n          return res + ', ';\n        });\n      }))), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"Currency: \", React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, this.state.countryDetail.map(function (country) {\n        return country.currencies.map(function (res) {\n          return Object.values(res) + ', ';\n        });\n      }))), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"Population: \", React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, this.state.countryDetail.map(function (country) {\n        return country.population;\n      }))), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"Demonym: \", React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, this.state.countryDetail.map(function (country) {\n        return country.demonym;\n      }))), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"Area: \", React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, this.state.countryDetail.map(function (country) {\n        return country.area;\n      }))), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"Code: \", React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, this.state.countryDetail.map(function (country) {\n        return country.numericCode;\n      }))), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"Timezone: \", React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, this.state.countryDetail.map(function (country) {\n        return country.timezones;\n      }))))))));\n    }\n  }]);\n\n  return CountriesList;\n}(Component);\n\nexport { CountriesList as default };","map":{"version":3,"sources":["C:\\wamp64\\www\\yobetit\\src\\components\\countrieslist\\countrieslist.jsx"],"names":["React","Component","axios","NavLink","palabras","CountriesList","state","count","countries","length","filterCountries","keyw","filterText","value","toLowerCase","filterCountryList","filter","country","cArr","name","indexOf","setState","visCountries","path_name","get","then","response","countryDetail","data","map","palabra","flag","capital","region","subregion","callingCodes","altSpellings","res","currencies","Object","values","population","demonym","area","numericCode","timezones"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,qBAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,kBAAxB;AAEA,IAAMC,QAAQ,GAAG,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,CAAjB;;IACqBC,a;;;;;;;;;;;;;;;;;UACjBC,K,GAAQ;AACJC,MAAAA,KAAK,EAAC,CADF;AAEJC,MAAAA,SAAS,EAAE,EAFP;AAGJC,MAAAA,MAAM,EAAC;AAHH,K;;UAiBRC,e,GAAkB,YAAM;AACpB,UAAIC,IAAI,GAAG,MAAKC,UAAL,CAAgBC,KAAhB,CAAsBC,WAAtB,EAAX;;AACA,UAAMC,iBAAiB,GAAG,MAAKT,KAAL,CAAWE,SAAX,CAAqBQ,MAArB,CAA4B,UAAAC,OAAO,EAAI;AAC7D,YAAIC,IAAI,GAAGD,OAAO,CAACE,IAAR,CAAaL,WAAb,EAAX;AACA,eAAOI,IAAI,CAACE,OAAL,CAAaT,IAAb,MAAuB,CAAC,CAA/B;AACH,OAHyB,CAA1B;;AAIA,YAAKU,QAAL,CAAc;AACVd,QAAAA,KAAK,EAAE,CADG;AAEVe,QAAAA,YAAY,EAAEP,iBAFJ;AAGVN,QAAAA,MAAM,EAACM,iBAAiB,CAACN;AAHf,OAAd;AAKH,K;;;;;;;wCAtBmB;AAAA;;AAEhB,UAAMc,SAAS,GAAI,6CAAnB;AACArB,MAAAA,KAAK,CAACsB,GAAN,CAAUD,SAAV,EAAqBE,IAArB,CAA0B,UAAAC,QAAQ,EAAI;AAClC,QAAA,MAAI,CAACL,QAAL,CAAc;AACVM,UAAAA,aAAa,EAAED,QAAQ,CAACE,IADd;AAEVnB,UAAAA,MAAM,EAAEiB,QAAQ,CAACE,IAAT,CAAcnB;AAFZ,SAAd;AAIH,OALD;AAMH;;;6BAeQ;AACL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKL,QAAQ,CAACyB,GAAT,CAAa,UAACC,OAAD,EAAa;AAACA,QAAAA,OAAO;AAAC,OAAnC,CADL,EAEI;AAAI,QAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uJAFJ,EAGI;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,GAAG,EAAE,KAAKxB,KAAL,CAAWqB,aAAX,CAAyBE,GAAzB,CAA6B,UAACZ,OAAD;AAAA,iBAAaA,OAAO,CAACc,IAArB;AAAA,SAA7B,CAAV;AAAmE,QAAA,SAAS,EAAC,WAA7E;AAAyF,QAAA,GAAG,EAAC,KAA7F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,EAIE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAA4B,KAAKzB,KAAL,CAAWqB,aAAX,CAAyBE,GAAzB,CAA6B,UAACZ,OAAD;AAAA,eAAaA,OAAO,CAACE,IAArB;AAAA,OAA7B,CAA5B,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI,KAAKb,KAAL,CAAWqB,aAAX,CAAyBE,GAAzB,CAA6B,UAACZ,OAAD;AAAA,eAAaA,OAAO,CAACe,OAArB;AAAA,OAA7B,CAAJ,CAAb,CADA,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI,KAAK1B,KAAL,CAAWqB,aAAX,CAAyBE,GAAzB,CAA6B,UAACZ,OAAD;AAAA,eAAaA,OAAO,CAACe,OAArB;AAAA,OAA7B,CAAJ,CAAb,CAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI,KAAK1B,KAAL,CAAWqB,aAAX,CAAyBE,GAAzB,CAA6B,UAACZ,OAAD;AAAA,eAAaA,OAAO,CAACgB,MAArB;AAAA,OAA7B,CAAJ,CAAZ,CAJJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI,KAAK3B,KAAL,CAAWqB,aAAX,CAAyBE,GAAzB,CAA6B,UAACZ,OAAD;AAAA,eAAaA,OAAO,CAACiB,SAArB;AAAA,OAA7B,CAAJ,CAAhB,CALJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI,KAAK5B,KAAL,CAAWqB,aAAX,CAAyBE,GAAzB,CAA6B,UAACZ,OAAD;AAAA,eAAaA,OAAO,CAACkB,YAArB;AAAA,OAA7B,CAAJ,CAAlB,CANJ,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI,KAAK7B,KAAL,CAAWqB,aAAX,CAAyBE,GAAzB,CAA6B,UAACZ,OAAD;AAAA,eAC7CA,OAAO,CAACmB,YAAR,CAAqBP,GAArB,CAAyB,UAACQ,GAAD,EAAO;AAC5B,iBAAOA,GAAG,GAAC,IAAX;AACF,SAFF,CAD6C;AAAA,OAA7B,CAAJ,CAAhB,CAPJ,EAaI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI,KAAK/B,KAAL,CAAWqB,aAAX,CAAyBE,GAAzB,CAA6B,UAACZ,OAAD;AAAA,eAC3CA,OAAO,CAACqB,UAAR,CAAmBT,GAAnB,CAAuB,UAACQ,GAAD,EAAO;AAC1B,iBAAOE,MAAM,CAACC,MAAP,CAAcH,GAAd,IAAmB,IAA1B;AACC,SAFL,CAD2C;AAAA,OAA7B,CAAJ,CAAd,CAbJ,EAmBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI,KAAK/B,KAAL,CAAWqB,aAAX,CAAyBE,GAAzB,CAA6B,UAACZ,OAAD;AAAA,eAAaA,OAAO,CAACwB,UAArB;AAAA,OAA7B,CAAJ,CAAhB,CAnBJ,EAoBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI,KAAKnC,KAAL,CAAWqB,aAAX,CAAyBE,GAAzB,CAA6B,UAACZ,OAAD;AAAA,eAAaA,OAAO,CAACyB,OAArB;AAAA,OAA7B,CAAJ,CAAb,CApBJ,EAqBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI,KAAKpC,KAAL,CAAWqB,aAAX,CAAyBE,GAAzB,CAA6B,UAACZ,OAAD;AAAA,eAAaA,OAAO,CAAC0B,IAArB;AAAA,OAA7B,CAAJ,CAAV,CArBJ,EAsBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI,KAAKrC,KAAL,CAAWqB,aAAX,CAAyBE,GAAzB,CAA6B,UAACZ,OAAD;AAAA,eAAaA,OAAO,CAAC2B,WAArB;AAAA,OAA7B,CAAJ,CAAV,CAtBJ,EAuBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI,KAAKtC,KAAL,CAAWqB,aAAX,CAAyBE,GAAzB,CAA6B,UAACZ,OAAD;AAAA,eAAaA,OAAO,CAAC4B,SAArB;AAAA,OAA7B,CAAJ,CAAd,CAvBJ,CAFF,CAJF,CADJ,CAHJ,CADJ;AAyCH;;;;EAzEsC5C,S;;SAAtBI,a","sourcesContent":["import React, { Component } from 'react';\r\nimport './countrieslist.css';\r\nimport axios from 'axios';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst palabras = [\"mal\", \"bul\", \"rom\"];\r\nexport default class CountriesList extends Component{\r\n    state = {\r\n        count:0,\r\n        countries: [],\r\n        length:0\r\n    };\r\n    \r\n    componentDidMount (){\r\n\r\n        const path_name = ('https://restcountries.eu/rest/v2/name/malta');\r\n        axios.get(path_name).then(response => {\r\n            this.setState({\r\n                countryDetail: response.data,\r\n                length: response.data.length\r\n            });\r\n        });\r\n    }\r\n\r\n    filterCountries = () => {\r\n        let keyw = this.filterText.value.toLowerCase();\r\n        const filterCountryList = this.state.countries.filter(country => {\r\n            let cArr = country.name.toLowerCase();\r\n            return cArr.indexOf(keyw) !== -1;\r\n        });\r\n        this.setState({\r\n            count: 0,\r\n            visCountries: filterCountryList,\r\n            length:filterCountryList.length\r\n        });\r\n    };\r\n\r\n    render (){\r\n        return (\r\n            <section>\r\n                {palabras.map((palabra) => {palabra})}\r\n                <h2 className=\"text-danger\">From an array of string, write a function that returns a list of countries where their name matches at least a part of one of these string.</h2>\r\n                <div className=\"countryDetail\">\r\n                    <div className=\"row\">\r\n                      <div className=\"col-md-4\">\r\n                        <img src={this.state.countryDetail.map((country) => country.flag)} className=\"img-fluid\" alt=\"...\" />\r\n                      </div>\r\n                      <div className=\"col-md-8\">\r\n                        <h5 className=\"mt-0\">About {this.state.countryDetail.map((country) => country.name)}</h5>\r\n                        <ul>\r\n                        <li>Capital: <b>{this.state.countryDetail.map((country) => country.capital)}</b></li>\r\n                            \r\n                            <li>Capital: <b>{this.state.countryDetail.map((country) => country.capital)}</b></li>\r\n                            <li>Region: <b>{this.state.countryDetail.map((country) => country.region)}</b></li>\r\n                            <li>Sub-region: <b>{this.state.countryDetail.map((country) => country.subregion)}</b></li>\r\n                            <li>Calling Code: <b>{this.state.countryDetail.map((country) => country.callingCodes)}</b></li>\r\n                            <li>Other Name: <b>{this.state.countryDetail.map((country) => \r\n                                country.altSpellings.map((res)=>{\r\n                                    return res+', '\r\n                                 })\r\n                                )}\r\n                                </b></li>\r\n                            <li>Currency: <b>{this.state.countryDetail.map((country) => \r\n                                country.currencies.map((res)=>{\r\n                                    return Object.values(res)+', ';\r\n                                    })\r\n                                )}\r\n                            </b></li>\r\n                            <li>Population: <b>{this.state.countryDetail.map((country) => country.population)}</b></li>\r\n                            <li>Demonym: <b>{this.state.countryDetail.map((country) => country.demonym)}</b></li>\r\n                            <li>Area: <b>{this.state.countryDetail.map((country) => country.area)}</b></li>\r\n                            <li>Code: <b>{this.state.countryDetail.map((country) => country.numericCode)}</b></li>\r\n                            <li>Timezone: <b>{this.state.countryDetail.map((country) => country.timezones)}</b></li>\r\n                        </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}