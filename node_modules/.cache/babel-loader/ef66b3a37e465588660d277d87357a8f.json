{"ast":null,"code":"import _classCallCheck from \"C:\\\\wamp64\\\\www\\\\yobetit\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\wamp64\\\\www\\\\yobetit\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\wamp64\\\\www\\\\yobetit\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\wamp64\\\\www\\\\yobetit\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\wamp64\\\\www\\\\yobetit\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\wamp64\\\\www\\\\yobetit\\\\src\\\\components\\\\allcountries\\\\allcountries.jsx\";\nimport React, { Component } from 'react';\nimport './allcountries.css';\nimport axios from 'axios';\nimport { NavLink } from 'react-router-dom';\n\nvar AllCountries =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AllCountries, _Component);\n\n  function AllCountries() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AllCountries);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AllCountries)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      count: 0,\n      countries: [],\n      visCountries: [],\n      length: 0\n    };\n\n    _this.componentDidMount = function () {\n      var match = _this.props.match;\n      var path = match.params.reg !== 'all' ? \"https://restcountries.eu/rest/v2/region/\".concat(match.params.reg) : 'https://restcountries.eu/rest/v2/all';\n      axios.get(path).then(function (response) {\n        _this.setState({\n          countries: response.data,\n          visCountries: response.data,\n          length: response.data.length\n        });\n      });\n    };\n\n    _this.sortData = function (event) {\n      var sortParam = event.target.value;\n\n      var sortCountries = _this.state.countries.sort(function (a, b) {\n        return b[sortParam] - a[sortParam];\n      });\n\n      _this.setState({\n        count: 0,\n        visCountries: sortCountries,\n        length: sortCountries.length\n      });\n    };\n\n    _this.filterCountries = function () {\n      var keyw = _this.filterText.value.toLowerCase();\n\n      var filterCountryList = _this.state.countries.filter(function (country) {\n        var cArr = country.name.toLowerCase();\n        return cArr.indexOf(keyw) !== -1;\n      });\n\n      _this.setState({\n        count: 0,\n        visCountries: filterCountryList,\n        length: filterCountryList.length\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(AllCountries, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"section\", {\n        className: \"allCountryList\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"text-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"List all the countries and a field to filter the country by name.\"), React.createElement(\"nav\", {\n        className: \"navbar filterRow text-white bg-info my-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-7\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"text-right col-md-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"Search by Country Name: \"), React.createElement(\"input\", {\n        type: \"text\",\n        onChange: this.filterCountries,\n        ref: function ref(node) {\n          return _this2.filterText = node;\n        },\n        className: \"col-md-7 searchBox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"row copyArea\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, this.state.visCountries.map(function (country) {\n        count: _this2.state.count++;\n\n        return React.createElement(\"div\", {\n          className: \"col-md-4\",\n          key: country.alpha2Code,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"card\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }, React.createElement(\"h5\", {\n          className: \"card-header alert-info text-info\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, _this2.state.count, \": \", country.name), React.createElement(\"div\", {\n          className: \"card-body row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"col-md-5 text-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          className: \"imgCountry\",\n          src: country.flag,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          className: \"col-md-7 desc\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, React.createElement(\"b\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, \"Capital: \"), \" \", country.capital), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }, React.createElement(\"b\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }, \"Region:\"), \" \", country.region), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }, React.createElement(\"b\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }, \"Population: \"), \" \", country.population), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }, React.createElement(\"b\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }, \"Area: \"), \" \", country.area), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, React.createElement(\"b\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, \"Alpha Code: \"), \" \", country.alpha2Code))), React.createElement(\"div\", {\n          className: \"card-footer text-right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }, React.createElement(NavLink, {\n          to: \"/country/\".concat(country.alpha2Code),\n          className: \"text-info\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }, \"Country Detail\"))));\n      })));\n    }\n  }]);\n\n  return AllCountries;\n}(Component);\n\nexport { AllCountries as default };","map":{"version":3,"sources":["C:\\wamp64\\www\\yobetit\\src\\components\\allcountries\\allcountries.jsx"],"names":["React","Component","axios","NavLink","AllCountries","state","count","countries","visCountries","length","componentDidMount","match","props","path","params","reg","get","then","response","setState","data","sortData","event","sortParam","target","value","sortCountries","sort","a","b","filterCountries","keyw","filterText","toLowerCase","filterCountryList","filter","country","cArr","name","indexOf","node","map","alpha2Code","flag","capital","region","population","area"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport './allcountries.css';\r\nimport axios from 'axios';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nexport default class AllCountries extends Component {\r\n    state = {\r\n        count: 0,\r\n        countries: [],\r\n        visCountries: [],\r\n        length:0\r\n    };\r\n\r\n    componentDidMount = () => {\r\n        const { match } = this.props;\r\n        const path = (match.params.reg !== 'all') ? `https://restcountries.eu/rest/v2/region/${match.params.reg}`: 'https://restcountries.eu/rest/v2/all';\r\n        axios.get(path).then(response => {\r\n            this.setState({\r\n                countries: response.data,\r\n                visCountries: response.data,\r\n                length:response.data.length\r\n            });\r\n        });\r\n    }\r\n\r\n    sortData = (event) => {\r\n        const sortParam = event.target.value;\r\n        const sortCountries = this.state.countries.sort((a, b) => {\r\n            return b[sortParam] - a[sortParam]\r\n        });\r\n        this.setState({\r\n            count: 0,\r\n            visCountries: sortCountries,\r\n            length:sortCountries.length\r\n        });\r\n    }\r\n\r\n    filterCountries = () => {\r\n        let keyw = this.filterText.value.toLowerCase();\r\n        const filterCountryList = this.state.countries.filter(country => {\r\n            let cArr = country.name.toLowerCase();\r\n            return cArr.indexOf(keyw) !== -1;\r\n        });\r\n        this.setState({\r\n            count: 0,\r\n            visCountries: filterCountryList,\r\n            length:filterCountryList.length\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <section className=\"allCountryList\">\r\n                <h2 className=\"text-danger\">List all the countries and a field to filter the country by name.</h2>\r\n                <nav className=\"navbar filterRow text-white bg-info my-4\">\r\n                    <div className=\"col-md-7\">\r\n                        <label className=\"text-right col-md-5\">Search by Country Name: </label>\r\n                        <input type=\"text\" onChange={this.filterCountries} ref={node => (this.filterText = node)} className=\"col-md-7 searchBox\" />\r\n                    </div>\r\n                    \r\n                </nav>\r\n\r\n                <div className=\"row copyArea\">\r\n                    {this.state.visCountries.map(country => {\r\n                        count: this.state.count++\r\n                        return (\r\n                            <div className=\"col-md-4\" key={country.alpha2Code}>\r\n                                <div className=\"card\">\r\n                                    <h5 className=\"card-header alert-info text-info\">{this.state.count}: {country.name}</h5>\r\n                                    <div className=\"card-body row\">\r\n                                        <div className=\"col-md-5 text-center\"><img className=\"imgCountry\" src={country.flag} /></div>\r\n                                        <div className=\"col-md-7 desc\">\r\n                                            <p><b>Capital: </b> {country.capital}</p>\r\n                                            <p><b>Region:</b> {country.region}</p>\r\n                                            <p><b>Population: </b> {country.population}</p>\r\n                                            <p><b>Area: </b> {country.area}</p>\r\n                                            <p><b>Alpha Code: </b> {country.alpha2Code}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"card-footer text-right\">\r\n                                        <NavLink to={`/country/${country.alpha2Code}`} className=\"text-info\">Country Detail</NavLink>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}