{"ast":null,"code":"import _classCallCheck from \"C:\\\\wamp64\\\\www\\\\yobetit\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\wamp64\\\\www\\\\yobetit\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\wamp64\\\\www\\\\yobetit\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\wamp64\\\\www\\\\yobetit\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\wamp64\\\\www\\\\yobetit\\\\src\\\\components\\\\countrieslist\\\\countrieslist.jsx\";\nimport React, { Component } from 'react';\nimport './countrieslist.css';\nimport axios from 'axios';\nimport { NavLink } from 'react-router-dom';\n\nvar CountriesList = /*#__PURE__*/function (_Component) {\n  _inherits(CountriesList, _Component);\n\n  var _super = _createSuper(CountriesList);\n\n  function CountriesList() {\n    var _this;\n\n    _classCallCheck(this, CountriesList);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      count: 0,\n      countries: [],\n      visCountries: [],\n      length: 0\n    };\n\n    _this.componentDidMount = function () {\n      var path_name = 'https://restcountries.eu/rest/v2/name/';\n      var strlist = [\"mal\", \"rom\", \"rus\"];\n      var result = [];\n\n      for (var i = 0; i < strlist.length; i++) {\n        axios.get(path_name + strlist[i]).then(function (response) {\n          result = result.concat(response.data);\n\n          if (i = strlist.length) {\n            _this.setState({\n              visCountries: result\n            });\n          }\n        });\n      }\n      /* axios.all([\r\n           \r\n           axios.get(path_name + strlist[0]),\r\n           axios.get(path_name + strlist[1]),\r\n           axios.get(path_name + strlist[2])\r\n         ])\r\n         .then(response => {\r\n             result= result.concat(response[0].data);\r\n             result= result.concat(response[1].data);\r\n             result= result.concat(response[2].data);\r\n             this.setState({visCountries:result});\r\n         });*/\n\n    };\n\n    return _this;\n  }\n\n  _createClass(CountriesList, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/React.createElement(\"section\", {\n        className: \"allCountryList\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        className: \"text-danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 15\n        }\n      }, \"From an array of string, write a function that returns a list of countries where their name matches at least a part of one of these string.\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row copyArea\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }\n      }, this.state.visCountries.map(function (country) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"col-md-4\",\n          key: country.alpha2Code,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"card\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(\"h5\", {\n          className: \"card-header alert-info text-info\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 37\n          }\n        }, \" \", country.name), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"card-body row\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"col-md-5 text-center\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          className: \"imgCountry\",\n          src: country.flag,\n          alt: \"flag\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 79\n          }\n        })), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"col-md-7 desc\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 45\n          }\n        }, /*#__PURE__*/React.createElement(\"b\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 48\n          }\n        }, \"Capital: \"), \" \", country.capital), /*#__PURE__*/React.createElement(\"p\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 45\n          }\n        }, /*#__PURE__*/React.createElement(\"b\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 48\n          }\n        }, \"Region:\"), \" \", country.region), /*#__PURE__*/React.createElement(\"p\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 45\n          }\n        }, /*#__PURE__*/React.createElement(\"b\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 48\n          }\n        }, \"Population: \"), \" \", country.population), /*#__PURE__*/React.createElement(\"p\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 45\n          }\n        }, /*#__PURE__*/React.createElement(\"b\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 48\n          }\n        }, \"Area: \"), \" \", country.area), /*#__PURE__*/React.createElement(\"p\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 45\n          }\n        }, /*#__PURE__*/React.createElement(\"b\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 48\n          }\n        }, \"Alpha Code: \"), \" \", country.alpha2Code))), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"card-footer text-right\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(NavLink, {\n          to: \"/country/\".concat(country.alpha2Code),\n          className: \"text-info\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 41\n          }\n        }, \"Country Detail\"))));\n      })));\n    }\n  }]);\n\n  return CountriesList;\n}(Component);\n\nexport { CountriesList as default };","map":{"version":3,"sources":["C:/wamp64/www/yobetit/src/components/countrieslist/countrieslist.jsx"],"names":["React","Component","axios","NavLink","CountriesList","state","count","countries","visCountries","length","componentDidMount","path_name","strlist","result","i","get","then","response","concat","data","setState","map","country","alpha2Code","name","flag","capital","region","population","area"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport './countrieslist.css';\r\nimport axios from 'axios';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\n\r\n\r\nexport default class CountriesList extends Component{\r\n    state = {\r\n        count: 0,\r\n        countries: [],\r\n        visCountries: [],\r\n        length:0\r\n    };\r\n\r\n    componentDidMount = () => {\r\n        const path_name = ('https://restcountries.eu/rest/v2/name/');\r\n        const strlist = [\"mal\", \"rom\", \"rus\"];\r\n        var result= [];\r\n\r\n        for (var i=0; i<strlist.length; i++){\r\n            axios.get(path_name + strlist[i]).then(response => {\r\n                result=result.concat(response.data);\r\n                if (i=strlist.length){\r\n                    this.setState({visCountries:result}); \r\n                }   \r\n            })\r\n\r\n        }\r\n    \r\n       /* axios.all([\r\n            \r\n            axios.get(path_name + strlist[0]),\r\n            axios.get(path_name + strlist[1]),\r\n            axios.get(path_name + strlist[2])\r\n          ])\r\n          .then(response => {\r\n              result= result.concat(response[0].data);\r\n              result= result.concat(response[1].data);\r\n              result= result.concat(response[2].data);\r\n              this.setState({visCountries:result});\r\n          });*/\r\n\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            \r\n            <section className=\"allCountryList\">\r\n              <h2 className=\"text-danger\">From an array of string, write a function that returns a list of countries where their name matches at least a part of one of these string.</h2>\r\n                \r\n\r\n                <div className=\"row copyArea\">\r\n                    {this.state.visCountries.map(country => {\r\n                        return (\r\n                            <div className=\"col-md-4\" key={country.alpha2Code}>\r\n                                <div className=\"card\">\r\n                                    <h5 className=\"card-header alert-info text-info\"> {country.name}</h5>\r\n                                    <div className=\"card-body row\">\r\n                                        <div className=\"col-md-5 text-center\"><img className=\"imgCountry\" src={country.flag} alt=\"flag\"/></div>\r\n                                        <div className=\"col-md-7 desc\">\r\n                                            <p><b>Capital: </b> {country.capital}</p>\r\n                                            <p><b>Region:</b> {country.region}</p>\r\n                                            <p><b>Population: </b> {country.population}</p>\r\n                                            <p><b>Area: </b> {country.area}</p>\r\n                                            <p><b>Alpha Code: </b> {country.alpha2Code}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"card-footer text-right\">\r\n                                        <NavLink to={`/country/${country.alpha2Code}`} className=\"text-info\">Country Detail</NavLink>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}